{"version":3,"file":"static/js/833.ce578678.chunk.js","mappings":"gRAMA,SAASA,EAAUC,GACjB,OAAa,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQC,QAAS,EACpBD,EAAOE,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MACrC,eACL,CAEc,SAASC,IAAmB,IAAD,QACxC,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAcjB,IAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAEuBC,EAAAA,EAAcA,EAAAA,EAAAA,WAAoBL,IAFzD,OAEUM,EAFV,OAGIP,EAASO,GAHb,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACT,IAE8B,IAA9BU,OAAOC,KAAKb,GAAOP,OAAvB,CAIA,IAAQqB,EACNd,EADMc,MAAOC,EACbf,EADae,SAAUC,EACvBhB,EADuBgB,aAAcC,EACrCjB,EADqCiB,YAAaC,EAClDlB,EADkDkB,aAAc1B,EAChEQ,EADgER,OAGlE,OACE,gCACE,UAAC,KAAD,CAAM2B,GAAE,oBAAEf,EAASgB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAKC,UAAU,aAAjD,WACE,SAAC,MAAD,IADF,cAIA,iBAAKA,UAAU,iBAAf,WACE,0BACE,gBACEC,IAAG,yCAAoCN,GACvCO,IAAI,eACJC,MAAM,QACNC,OAAO,YAGX,4BACE,0BACGZ,EADH,IACW,YAAMI,QAAN,IAAMA,OAAN,EAAMA,EAAcS,MAAM,EAAG,IAAK,QAE7C,wCAAgBC,KAAKC,MAAqB,GAAfb,GAA3B,QACA,wBACE,uCAEF,6BAAKD,MACL,wBACE,qCAEF,uBAAIxB,EAAUC,YAIlB,iBAAK8B,UAAU,aAAf,WACE,6CACA,2BACE,yBACE,SAAC,KAAD,CAAMH,GAAG,OAAOC,MAAO,CAAEC,KAAI,UAAEjB,EAASgB,aAAX,aAAE,EAAgBC,MAA/C,qBAIF,yBACE,SAAC,KAAD,CAAMF,GAAG,UAAUC,MAAO,CAAEC,KAAI,UAAEjB,EAASgB,aAAX,aAAE,EAAgBC,MAAlD,6BAMN,SAAC,EAAAS,SAAD,WACE,SAAC,KAAD,QApDL,CAwDF,C,qHCtFDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAEaC,EAAO,CAClBC,SAAU,qBACVC,aAAc,eACdC,WAAY,SAAAC,GAAE,uBAAcA,EAAd,EACdC,WAAY,SAAAD,GAAE,uBAAcA,EAAd,aACdE,cAAe,SAAAF,GAAE,uBAAcA,EAAd,cAGNG,EAAS,mCAAG,WAAOC,EAAMC,GAAb,gFACjBC,EAAcD,EAAK,iBAAaA,EAAb,WAA8B,GADhC,UAEAV,EAAAA,EAAAA,GAAM,GAAD,OAAIS,EAAJ,oBAZd,oCAYc,OAA8BE,IAFnC,cAEjBC,EAFiB,yBAGhBA,EAASnC,MAHO,2CAAH,uD","sources":["pages/SingleMoviePage/SingleMoviePage.jsx","service/MoviesApi.jsx"],"sourcesContent":["import { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport { BiArrowBack } from 'react-icons/bi';\nimport { useEffect, useState, Suspense } from 'react';\nimport * as API from '../../service/MoviesApi';\nimport './SingleMoviePage.css';\n\nfunction getGenres(genres) {\n  return genres?.length > 0\n    ? genres.map(genre => genre.name).join(', ')\n    : 'Not specified';\n}\n\nexport default function SingleMoviePage() {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        const data = await API.fetchData(API.PATH.searchByID(movieId));\n        setMovie(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchMovies();\n  }, [movieId]);\n\n  if (Object.keys(movie).length === 0) {\n    return;\n  }\n\n  const { title, overview, vote_average, poster_path, release_date, genres } =\n    movie;\n\n  return (\n    <section>\n      <Link to={location.state?.from ?? '/'} className=\"movie-link\">\n        <BiArrowBack />\n        Go back\n      </Link>\n      <div className=\"movie-wrapper \">\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt=\"movie poster\"\n            width=\"250px\"\n            height=\"auto\"\n          />\n        </div>\n        <div>\n          <h1>\n            {title} {'(' + release_date?.slice(0, 4) + ')'}\n          </h1>\n          <p>User score: {Math.round(vote_average * 10)}%</p>\n          <p>\n            <b>Overview</b>\n          </p>\n          <p> {overview}</p>\n          <p>\n            <b>Genres</b>\n          </p>\n          <p>{getGenres(genres)}</p>\n        </div>\n      </div>\n\n      <div className=\"movie-info\">\n        <h2>Additional info</h2>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: location.state?.from }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: location.state?.from }}>\n              Review\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </section>\n  );\n}\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c56bd7e53d7ca9a4e158096c2a9f2678';\n\nexport const PATH = {\n  trending: 'trending/movie/day',\n  searchByName: 'search/movie',\n  searchByID: id => `/movie/${id}`,\n  searchCast: id => `/movie/${id}/credits`,\n  searchReviews: id => `/movie/${id}/reviews`,\n};\n\nexport const fetchData = async (path, query) => {\n  const searchQuery = query ? `&query=${query}&page=1` : '';\n  const response = await axios(`${path}?api_key=${API_KEY}${searchQuery}`);\n  return response.data;\n};\n"],"names":["getGenres","genres","length","map","genre","name","join","SingleMoviePage","useState","movie","setMovie","movieId","useParams","location","useLocation","useEffect","API","data","console","log","fetchMovies","Object","keys","title","overview","vote_average","poster_path","release_date","to","state","from","className","src","alt","width","height","slice","Math","round","Suspense","axios","PATH","trending","searchByName","searchByID","id","searchCast","searchReviews","fetchData","path","query","searchQuery","response"],"sourceRoot":""}